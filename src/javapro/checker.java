/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javapro;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Sushil Singh
 */
public class checker extends javax.swing.JFrame {

    /**
     * Creates new form checker
     */
    public checker() {
        initComponents();
        checkname.setText("Checker "+javapro.loginform.loggedchecker);
        entrybutton.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        guestname = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        inviteno = new javax.swing.JTextField();
        checkname = new javax.swing.JLabel();
        entrystatus = new javax.swing.JLabel();
        entrybutton = new javax.swing.JButton();
        logout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Guest Name");

        guestname.setEditable(false);

        jLabel1.setText("Invitation no");

        inviteno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                invitenoMouseClicked(evt);
            }
        });
        inviteno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                invitenoKeyPressed(evt);
            }
        });

        checkname.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        checkname.setText("Checker Name");
        checkname.setBorder(new javax.swing.border.MatteBorder(null));

        entrystatus.setText("Entry Status");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(entrystatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(guestname, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(inviteno, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(checkname))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkname)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(inviteno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(guestname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entrystatus)
                .addContainerGap())
        );

        entrybutton.setText("Allow Guest to Enter");
        entrybutton.setEnabled(false);
        entrybutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entrybuttonActionPerformed(evt);
            }
        });

        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(entrybutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(97, 97, 97))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entrybutton)
                    .addComponent(logout))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void entrybuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entrybuttonActionPerformed
    if(guestname.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Firstly Verify the Guest Data");
        }
    else
    {
        DateFormat dateformat=new SimpleDateFormat("YYYY-MM-dd HH:mm:ss");
        Date date = new Date();
        String mydate = dateformat.format(date);
        String a[]=mydate.split(" ");
        int invitenum=Integer.parseInt(inviteno.getText());
        String name=guestname.getText();
        
        try
        {
            Class.forName("java.sql.DriverManager");
            Connection con=(Connection)
                    DriverManager.getConnection("jdbc:mysql://localhost:3306/javapro","root","1234");
            Statement stmt=(Statement) con.createStatement();
            String query1="insert into guest_attend values("+invitenum+",'"+name+"','"+a[0]+"','"+a[1]+"','"+javapro.loginform.loggedchecker+"');";
            String query2="";
            int rowsEffected =  stmt.executeUpdate(query1);
            if(rowsEffected==0)
                JOptionPane.showMessageDialog(this, "Please Try Again");
            else
            {
                JOptionPane.showMessageDialog(this,"Inserted");
                inviteno.setText("");
                guestname.setText("");
                entrybutton.setEnabled(false);
            }
        }
        catch (ClassNotFoundException | SQLException ex) 
        {
            Logger.getLogger(checker.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    }//GEN-LAST:event_entrybuttonActionPerformed

    private void invitenoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invitenoKeyPressed
if(evt.getKeyCode()==KeyEvent.VK_ENTER)
    {
        if(inviteno.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Please enter the invitation no");
        }
        else
        {
            try
            {
                int invno=Integer.parseInt(inviteno.getText());
                Class.forName("java.sql.DriverManager");
                Connection con = (Connection)
                DriverManager.getConnection("jdbc:mysql://localhost:3306/javapro","root","1234");
                Statement stmt = (Statement) con.createStatement();
                String query1="Select count(gname) as no from guest_list where inviteno="+invno+";";
                String query2="select gname from guest_list where inviteno = "+invno+";";
                String query3="Select count(gname) as no from guest_attend where inviteno='"+invno+"';";
                String query4="Select*from guest_attend where inviteno='"+invno+"';";
                int count1 = 0;
                int count2 = 0;
                ResultSet rs1=stmt.executeQuery(query1);
                if(rs1.next())
                {
                    count1=rs1.getInt("no");
                }
                if(count1==1)
                {
                    ResultSet rs2=stmt.executeQuery(query2);
                    if(rs2.next())
                    {
                        String name=rs2.getString("gname");
                        guestname.setText(name);
                        entrybutton.setEnabled(true);
                    }
                    ResultSet rs3=stmt.executeQuery(query3);
                    if(rs3.next())
                    {
                        count2=rs3.getInt("no");
                    }
                    if(count2==1)
                    {
                        ResultSet rs4=stmt.executeQuery(query4);
                        if(rs4.next())
                        {
                            String getdate1=rs4.getString("date");
                            String gettime=rs4.getString("time");
                            entrystatus.setText(guestname.getText()+" has already entered in the Event at "+" "+getdate1+gettime );
                        }
                        entrybutton.setEnabled(false);
                    }else
                    {
                        entrystatus.setText("Entry Status");
                        entrybutton.setEnabled(true);
                    }
                }
                else
                {
                    entrystatus.setText("No Recode found");
                    guestname.setText("");
                }
            }
            catch (ClassNotFoundException | SQLException ex) 
            {
                Logger.getLogger(adminpage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        guestname.getSelectionStart();
    }
    }//GEN-LAST:event_invitenoKeyPressed

    private void invitenoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invitenoMouseClicked
    entrybutton.setEnabled(false);
    }//GEN-LAST:event_invitenoMouseClicked

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
    this.setVisible(false);
    new loginform().setVisible(true);
    }//GEN-LAST:event_logoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(checker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(checker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(checker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(checker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new checker().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel checkname;
    private javax.swing.JButton entrybutton;
    private javax.swing.JLabel entrystatus;
    private javax.swing.JTextField guestname;
    private javax.swing.JTextField inviteno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton logout;
    // End of variables declaration//GEN-END:variables
}
