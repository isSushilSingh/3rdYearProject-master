/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javapro;
import java.sql.*;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Sushil Singh
 */
public class adminpage extends javax.swing.JFrame {

    /**
     * Creates new form adminpage
     */
    public adminpage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        addcheckername = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        linviteno = new javax.swing.JLabel();
        inviteno = new javax.swing.JTextField();
        lguestname = new javax.swing.JLabel();
        guestname = new javax.swing.JTextField();
        radioaddmem = new javax.swing.JRadioButton();
        radiodelmem = new javax.swing.JRadioButton();
        addserdel = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Checker name");

        jButton1.setText("Add checker");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        addcheckername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addcheckernameActionPerformed(evt);
            }
        });
        addcheckername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addcheckernameKeyPressed(evt);
            }
        });

        jButton2.setText("Delete checker");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        linviteno.setText("Invitation no");
        linviteno.setEnabled(false);

        inviteno.setEnabled(false);
        inviteno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invitenoActionPerformed(evt);
            }
        });
        inviteno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                invitenoKeyPressed(evt);
            }
        });

        lguestname.setText("Guest Name");
        lguestname.setEnabled(false);

        guestname.setEnabled(false);
        guestname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                guestnameKeyPressed(evt);
            }
        });

        buttonGroup1.add(radioaddmem);
        radioaddmem.setText("Add Member");
        radioaddmem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioaddmemActionPerformed(evt);
            }
        });

        buttonGroup1.add(radiodelmem);
        radiodelmem.setText("Search/Delete Member");
        radiodelmem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiodelmemActionPerformed(evt);
            }
        });

        addserdel.setText("Please select one operation");
        addserdel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addserdelActionPerformed(evt);
            }
        });

        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Logout");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Exit");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Advance Wizard>>>>>>");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(radioaddmem)
                        .addGap(18, 18, 18)
                        .addComponent(radiodelmem))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jButton1)
                                    .addComponent(linviteno)
                                    .addComponent(lguestname))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(guestname, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addcheckername, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2)
                                    .addComponent(inviteno, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(addserdel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(addcheckername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioaddmem)
                    .addComponent(radiodelmem))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(inviteno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guestname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(linviteno)
                        .addGap(18, 18, 18)
                        .addComponent(lguestname)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addserdel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   if(  addcheckername.getText().isEmpty())
   {
       JOptionPane.showMessageDialog(this, "Field is empty");
   }
   else 
   {
       try
        {
            String name=addcheckername.getText();
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection)
            DriverManager.getConnection("jdbc:mysql://localhost:3306/javapro","root","1234");
            Statement stmt = (Statement) con.createStatement();
            String query1 = "Select count(name) as num from checker where name='"+name+"';";
            ResultSet rs=stmt.executeQuery(query1);
            int count=0;
            if(rs.next())
            {
                count=rs.getInt("num");
            }
            if(count==1)
            {
                JOptionPane.showMessageDialog(this,"This Checker is already registered registered");
            }
            else   
            {
                
       try
       {
           String query = "Insert into checker values('"+name+"');";
           int rowsEffected =  stmt.executeUpdate(query);
           if(rowsEffected==0)
               JOptionPane.showMessageDialog(this, "Please Try Again");
           else
               JOptionPane.showMessageDialog(this,"Inserted");
       }
       catch(SQLException | HeadlessException e)
       {
           JOptionPane.showMessageDialog(this, e.getMessage());
           
       }
            }
        }
        catch (ClassNotFoundException | SQLException ex) 
        {
            Logger.getLogger(adminpage.class.getName()).log(Level.SEVERE, null, ex);
        }
   }
   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    if(addcheckername.getText().isEmpty())
    {
        JOptionPane.showMessageDialog(this,"Checker name is empty");
    }
    else
    {
        try
        {
            String name=addcheckername.getText();
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection)
            DriverManager.getConnection("jdbc:mysql://localhost:3306/javapro","root","1234");
            Statement stmt = (Statement) con.createStatement();
            String query1 = "Select count(name) as num from checker where name='"+name+"';";
            ResultSet rs=stmt.executeQuery(query1);
            int count=0;
            if(rs.next())
            {
                count=rs.getInt("num");
            }
            if(count==1)
            {
                //JOptionPane.showMessageDialog(this,"This Checker is registered");
                int p=JOptionPane.showConfirmDialog(rootPane,"Do you really want to delete","Delete",JOptionPane.YES_NO_OPTION);
                if(p==0)
                {
                    try
                    {
                        Class.forName("java.sql.DriverManager");
                        DriverManager.getConnection("jdbc:mysql://localhost:3306/javapro","root","1234");
                        String query2 = "Delete from checker where name = '"+name+"';";
                        int rowsEffected =  stmt.executeUpdate(query2);
                        if(rowsEffected==0)
                            JOptionPane.showMessageDialog(this, "Please Try Again");
                        else    
                            JOptionPane.showMessageDialog(this,"Deleted");    
                    }
                    catch(ClassNotFoundException | SQLException | HeadlessException e)
                    {   
                        JOptionPane.showMessageDialog(this, e.getMessage());
                    }
                }
            }
            else   
            {
                JOptionPane.showMessageDialog(this,"This checker is not registered");
            }
        }
        catch (ClassNotFoundException | SQLException ex) 
        {
            Logger.getLogger(adminpage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void addcheckernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addcheckernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addcheckernameActionPerformed

    private void invitenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invitenoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_invitenoActionPerformed

    private void addserdelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addserdelActionPerformed
    if(radioaddmem.isSelected())
    {
        if(guestname.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Please enter the guest member name");
        }
        else
        {
            try
            {
                Class.forName("java.sql.DriverManager");
                Connection con;
                con = (Connection)
                   DriverManager.getConnection("jdbc:mysql://localhost:3306/javapro","root","1234");
                Statement stmt = con.createStatement();
                ResultSet rs = null;
                int invno=Integer.parseInt(inviteno.getText());
                String gname=guestname.getText();
                String query = "Insert into guest_list values('"+gname+"',"+invno+");";
                int rowsEffected =  stmt.executeUpdate(query);
                if(rowsEffected==0)
                    JOptionPane.showMessageDialog(this, "Please Try Again");
                else
                {
                    JOptionPane.showMessageDialog(this,"Inserted");
                    inviteno.setText(""+ ++invno);
                    guestname.setText("");
                }
            }
            catch(ClassNotFoundException | SQLException | HeadlessException e)
            {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }
    else if(radiodelmem.isSelected())
    {
        if(inviteno.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Please enter the guest invitation no");
        }
        else
        {
            int p=JOptionPane.showConfirmDialog(rootPane,"Do you really want to delete","Delete",JOptionPane.YES_NO_OPTION);
            if(p==0)
            {
                try
                {
                    Class.forName("java.sql.DriverManager");
                    Connection con = (Connection)
                    DriverManager.getConnection("jdbc:mysql://localhost:3306/javapro","root","1234");
                    Statement stmt = con.createStatement();
                    ResultSet rs = null;
                    int invno=Integer.parseInt(inviteno.getText());
                    String query = "Delete from guest_list where inviteno = '"+invno+"';";
                    int rowsEffected =  stmt.executeUpdate(query);
                    if(rowsEffected==0)
                        JOptionPane.showMessageDialog(this, "Please Try Again");
                    else    
                    {
                        JOptionPane.showMessageDialog(this,"Deleted");
                        guestname.setText("");
                        inviteno.setText("");
                    }
                    
                }
                catch(ClassNotFoundException | SQLException | HeadlessException e)
                {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
            }
        }
    }
    else
        JOptionPane.showMessageDialog(this,"Please select one of the operation");
    }//GEN-LAST:event_addserdelActionPerformed

    private void radioaddmemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioaddmemActionPerformed
    linviteno.setEnabled(false);
    inviteno.setEnabled(false);
    lguestname.setEnabled(true);
    guestname.setEnabled(true);
    guestname.setText("");
    addserdel.setText("Add member");
   
    try
    {
        Class.forName("java.sql.DriverManager");
        Connection con = (Connection)
        DriverManager.getConnection("jdbc:mysql://localhost:3306/javapro","root","1234");
        Statement stmt = (Statement) con.createStatement();
        String query = "select max(inviteno) from guest_list";
        ResultSet rs=stmt.executeQuery(query);
        int count = 0;
        if(rs.next())
        {
            count=rs.getInt(1);
        }
        JOptionPane.showMessageDialog(this,"there are "+count+" new member has been added");
        inviteno.setText(""+ ++count);
                
    }
    catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(adminpage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_radioaddmemActionPerformed

    private void radiodelmemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiodelmemActionPerformed
    linviteno.setEnabled(true);
    inviteno.setEnabled(true);
    lguestname.setEnabled(false);
    guestname.setEnabled(false);
    inviteno.setText("");
    guestname.setText("");
    addserdel.setText("Delete member");
    }//GEN-LAST:event_radiodelmemActionPerformed

    private void invitenoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invitenoKeyPressed
    if(evt.getKeyCode()==KeyEvent.VK_ENTER)
    {
        if(inviteno.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Please enter the invitation no");
        }
        else
        {
            try
            {
                int invno=Integer.parseInt(inviteno.getText());
                Class.forName("java.sql.DriverManager");
                Connection con = (Connection)
                DriverManager.getConnection("jdbc:mysql://localhost:3306/javapro","root","1234");
                Statement stmt = (Statement) con.createStatement();
                String query="select gname from guest_list where inviteno = "+invno+";";
                ResultSet rs =  stmt.executeQuery(query);
                if(rs.next())
                {
                    String name=rs.getString("gname");
                    guestname.setText(name);
                }
                else
                {
                    JOptionPane.showMessageDialog(this,"No Recode found");
                    guestname.setText("");
                }
            }
            catch (ClassNotFoundException | SQLException ex) 
            {
                Logger.getLogger(adminpage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    }//GEN-LAST:event_invitenoKeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    if(radioaddmem.isSelected())
    {
        addcheckername.setText("");
        guestname.setText("");
    }
    else if(radiodelmem.isSelected())
    {
        addcheckername.setText("");
        inviteno.setText("");
    }
    else
    {
        addcheckername.setText("");
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
int p=JOptionPane.showConfirmDialog(rootPane,"Are you realy want to leave","",JOptionPane.YES_NO_OPTION);
    if(p==0)
    {
        JOptionPane.showMessageDialog(this,"Have a nice day");
        System.exit(0);
    }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
this.setVisible(false);
new loginform().setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.setVisible(false);
        new adminpageadvance().setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void addcheckernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addcheckernameKeyPressed
    if(evt.getKeyCode()==KeyEvent.VK_ENTER)
    {
        try
        {
            String name=addcheckername.getText();
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection)
            DriverManager.getConnection("jdbc:mysql://localhost:3306/javapro","root","1234");
            Statement stmt = (Statement) con.createStatement();
            String query = "Select count(name) as num from checker where name='"+name+"';";
            ResultSet rs=stmt.executeQuery(query);
            int count=0;
            if(rs.next())
            {
                count=rs.getInt("num");
            }
            if(count==1)
            {
                JOptionPane.showMessageDialog(this,"This Checker is registered");
            }
            else   
            {
                JOptionPane.showMessageDialog(this,"This checker is not registered");
            }
        }
        catch (ClassNotFoundException | SQLException ex) 
        {
            Logger.getLogger(adminpage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    }//GEN-LAST:event_addcheckernameKeyPressed

    private void guestnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guestnameKeyPressed
    if(evt.getKeyCode()==KeyEvent.VK_ENTER)
    {   if(guestname.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(this,"Please enter the guest member name");
            }
        else
        {
            try
            {
                Class.forName("java.sql.DriverManager");
                Connection con;
                con = (Connection)
                    DriverManager.getConnection("jdbc:mysql://localhost:3306/javapro","root","1234");
                Statement stmt = con.createStatement();
                ResultSet rs = null;
                int invno=Integer.parseInt(inviteno.getText());
                String gname=guestname.getText();
                String query = "Insert into guest_list values('"+gname+"',"+invno+");";
                int rowsEffected =  stmt.executeUpdate(query);
                if(rowsEffected==0)
                    JOptionPane.showMessageDialog(this, "Please Try Again");
                else
                {
                    JOptionPane.showMessageDialog(this,"Inserted");
                    inviteno.setText(""+ ++invno);
                    guestname.setText("");
                }
            }
            catch(ClassNotFoundException | SQLException | HeadlessException e)
            {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }
    }//GEN-LAST:event_guestnameKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminpage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addcheckername;
    private javax.swing.JButton addserdel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField guestname;
    private javax.swing.JTextField inviteno;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lguestname;
    private javax.swing.JLabel linviteno;
    private javax.swing.JRadioButton radioaddmem;
    private javax.swing.JRadioButton radiodelmem;
    // End of variables declaration//GEN-END:variables
}
